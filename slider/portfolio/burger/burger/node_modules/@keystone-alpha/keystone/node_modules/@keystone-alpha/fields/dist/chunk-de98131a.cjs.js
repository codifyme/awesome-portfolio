'use strict';

function _interopDefault(ex) {
  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;
}

require("@babel/runtime/helpers/objectSpread");

require("@babel/runtime/helpers/objectWithoutProperties");

require("@babel/runtime/helpers/slicedToArray");

var _defineProperty = _interopDefault(require("@babel/runtime/helpers/defineProperty"));

require('@emotion/core');

var React = require('react');

var React__default = _interopDefault(React);

require("@babel/runtime/helpers/extends");

require('@arch-ui/select');

require("@babel/runtime/helpers/taggedTemplateLiteral");

require('react-apollo');

require('graphql-tag');

require('react-select');

require('intersection-observer');

var __chunk_2 = require('./chunk-ad3a0da7.cjs.js');

const EventCatcher = _ref => {
  let children = _ref.children;
  return React__default.createElement("div", {
    onClick: e => {
      e.preventDefault();
      e.stopPropagation();
    }
  }, children);
};

class RelationshipFilterView extends React.Component {
  constructor() {
    super(...arguments);

    _defineProperty(this, "handleChange", option => {
      const onChange = this.props.onChange;

      if (option === null) {
        onChange(null);
      } else {
        const value = option.value;

        if (value) {
          onChange(value.id);
        }
      }
    });
  }

  render() {
    const _this$props = this.props,
          filter = _this$props.filter,
          field = _this$props.field,
          value = _this$props.value;
    if (!filter) return null;
    const htmlID = "ks-input-".concat(field.path);
    return React__default.createElement(EventCatcher, null, React__default.createElement(__chunk_2.RelationshipSelect, {
      field: field,
      renderContext: null,
      htmlID: htmlID,
      onChange: this.handleChange,
      value: value,
      isMulti: false
    }));
  }

}

exports.default = RelationshipFilterView;
