'use strict';

function _interopDefault(ex) {
  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;
}

require("@babel/runtime/helpers/classCallCheck");

var _defineProperty = _interopDefault(require("@babel/runtime/helpers/defineProperty"));

require('lodash.isequal');

var fields = require('../Controller/dist/fields.cjs.js');

class FileController extends fields.default {
  constructor() {
    super(...arguments);

    _defineProperty(this, "serialize", data => {
      const path = this.path;

      if (!data || !data[path]) {
        // Forcibly return null if empty string
        return null;
      }

      return data[path];
    });

    _defineProperty(this, "getQueryFragment", () => "\n    ".concat(this.path, " {\n       id\n       path\n       filename\n       mimetype\n       encoding\n       publicUrl\n    }\n  "));

    _defineProperty(this, "getFilterTypes", () => []);
  }

}

exports.default = FileController;
