'use strict';

function _interopDefault(ex) {
  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;
}

var _objectSpread = _interopDefault(require("@babel/runtime/helpers/objectSpread"));

var __chunk_1 = require('./chunk-47d16637.cjs.js');

require("@babel/runtime/helpers/classCallCheck");

var _defineProperty = _interopDefault(require("@babel/runtime/helpers/defineProperty"));

require('lodash.isequal');

require('../Controller/dist/fields.cjs.js');

var Controller_js = require('./chunk-64e1cc76.cjs.js');

class FileController extends Controller_js.default {
  constructor() {
    super(...arguments);

    _defineProperty(this, "getQueryFragment", () => "\n    ".concat(this.path, " {\n      ").concat(__chunk_1.queryFragment, "\n    }\n  "));

    _defineProperty(this, "deserialize", data => {
      const oEmbed = data[this.path];

      if (!oEmbed || !oEmbed.originalUrl) {
        // Nothing set, so force to null
        return null;
      }

      return {
        originalUrl: oEmbed.originalUrl,
        preview: _objectSpread({
          // Ensure the .html property is always set
          html: ''
        }, oEmbed, {
          // Attempt to derive a useful title
          title: oEmbed.title || oEmbed.author && oEmbed.author.name || oEmbed.provider && oEmbed.provider.name || ''
        })
      };
    });

    _defineProperty(this, "serialize", data => {
      const path = this.path; // We only send the URL itself to the mutation

      return data[path] && data[path].originalUrl || null;
    });
  }

}

exports.default = FileController;
