import _objectSpread from '@babel/runtime/helpers/esm/objectSpread';
import { a as queryFragment } from './chunk-c05fb8ee.esm.js';
import '@babel/runtime/helpers/esm/classCallCheck';
import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';
import 'lodash.isequal';
import '../Controller/dist/fields.esm.js';
import FileController from './chunk-91a4cf5b.esm.js';

class FileController$1 extends FileController {
  constructor() {
    super(...arguments);

    _defineProperty(this, "getQueryFragment", () => "\n    ".concat(this.path, " {\n      ").concat(queryFragment, "\n    }\n  "));

    _defineProperty(this, "deserialize", data => {
      const oEmbed = data[this.path];

      if (!oEmbed || !oEmbed.originalUrl) {
        // Nothing set, so force to null
        return null;
      }

      return {
        originalUrl: oEmbed.originalUrl,
        preview: _objectSpread({
          // Ensure the .html property is always set
          html: ''
        }, oEmbed, {
          // Attempt to derive a useful title
          title: oEmbed.title || oEmbed.author && oEmbed.author.name || oEmbed.provider && oEmbed.provider.name || ''
        })
      };
    });

    _defineProperty(this, "serialize", data => {
      const path = this.path; // We only send the URL itself to the mutation

      return data[path] && data[path].originalUrl || null;
    });
  }

}

export default FileController$1;
