"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = dev;

var _project = require("./project");

var _logger = require("./logger");

var fs = _interopRequireWildcard(require("fs-extra"));

var _path = _interopRequireDefault(require("path"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

async function dev(projectDir) {
  let project = await _project.Project.create(projectDir);
  project.packages.forEach(({
    entrypoints
  }) => entrypoints.forEach(x => x.strict()));
  (0, _logger.info)('project is valid!');
  let promises = [];
  await Promise.all(project.packages.map(pkg => {
    return Promise.all(pkg.entrypoints.map(async _entrypoint => {
      let entrypoint = _entrypoint.strict();

      await fs.remove(_path.default.join(entrypoint.directory, 'dist'));
      await fs.ensureDir(_path.default.join(entrypoint.directory, 'dist'));
      await Promise.all([fs.symlink(entrypoint.source, _path.default.join(entrypoint.directory, entrypoint.module)), fs.writeFile(_path.default.join(entrypoint.directory, entrypoint.main), `"use strict";

let unregister = require(${JSON.stringify(require.resolve('@preconstruct/hook'))}).___internalHook(${JSON.stringify(project.directory)});

module.exports = require(${JSON.stringify(entrypoint.source)});

unregister();
`)]);
    }));
  }));
  await Promise.all(promises);
  (0, _logger.success)('created links!');
}