import '@babel/runtime/helpers/esm/objectSpread';
import '@babel/runtime/helpers/esm/objectWithoutProperties';
import '@babel/runtime/helpers/esm/slicedToArray';
import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';
import '@emotion/core';
import React__default, { Component } from 'react';
import '@babel/runtime/helpers/esm/extends';
import '@arch-ui/select';
import '@babel/runtime/helpers/esm/taggedTemplateLiteral';
import 'react-apollo';
import 'graphql-tag';
import 'react-select';
import 'intersection-observer';
import { a as RelationshipSelect } from './chunk-ad892f45.esm.js';

const EventCatcher = _ref => {
  let children = _ref.children;
  return React__default.createElement("div", {
    onClick: e => {
      e.preventDefault();
      e.stopPropagation();
    }
  }, children);
};

class RelationshipFilterView extends Component {
  constructor() {
    super(...arguments);

    _defineProperty(this, "handleChange", option => {
      const onChange = this.props.onChange;

      if (option === null) {
        onChange(null);
      } else {
        const value = option.value;

        if (value) {
          onChange(value.id);
        }
      }
    });
  }

  render() {
    const _this$props = this.props,
          filter = _this$props.filter,
          field = _this$props.field,
          value = _this$props.value;
    if (!filter) return null;
    const htmlID = "ks-input-".concat(field.path);
    return React__default.createElement(EventCatcher, null, React__default.createElement(RelationshipSelect, {
      field: field,
      renderContext: null,
      htmlID: htmlID,
      onChange: this.handleChange,
      value: value,
      isMulti: false
    }));
  }

}

export default RelationshipFilterView;
