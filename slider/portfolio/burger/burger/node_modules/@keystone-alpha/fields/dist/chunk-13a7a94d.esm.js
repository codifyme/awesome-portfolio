import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';
import { jsx } from '@emotion/core';
import { getYear } from 'date-fns';
import { Component } from 'react';
import { FieldContainer, FieldLabel, FieldInput } from '@arch-ui/fields';
import { TextDayPicker } from '@arch-ui/day-picker';

class CalendarDayField extends Component {
  constructor() {
    super(...arguments);

    _defineProperty(this, "handleSelectedChange", value => {
      const _this$props = this.props,
            field = _this$props.field,
            onChange = _this$props.onChange;

      if (value === null || getYear(value).toString().length <= 4 && getYear(value) <= field.config.yearRangeTo && getYear(value) >= field.config.yearRangeFrom) {
        onChange(value);
      }
    });
  }

  render() {
    const _this$props2 = this.props,
          autoFocus = _this$props2.autoFocus,
          field = _this$props2.field,
          value = _this$props2.value,
          errors = _this$props2.errors;
    const htmlID = "ks-input-".concat(field.path);
    return jsx(FieldContainer, null, jsx(FieldLabel, {
      htmlFor: htmlID,
      field: field,
      errors: errors
    }), jsx(FieldInput, null, jsx(TextDayPicker, {
      id: "ks-daypicker-".concat(field.path),
      autoFocus: autoFocus,
      date: value,
      onChange: this.handleSelectedChange
    })));
  }

}

export default CalendarDayField;
